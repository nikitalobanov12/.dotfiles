# Set prefix to Ctrl+n (more ergonomic)
unbind C-b
set-option -g prefix C-n
bind-key C-n send-prefix

# Create new window
bind-key t new-window -c "#{pane_current_path}"
bind-key -n M-t new-window -c "#{pane_current_path}"

# Split panes
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key / split-window -h -c "#{pane_current_path}"

# Quick window switching with Alt+number (no prefix needed)
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5

# Session management
bind-key -n M-s choose-session
bind-key S new-session

# Kill pane/terminal shortcuts
bind-key x kill-pane
bind-key X kill-pane -t ''
bind-key q kill-window

# Resize panes with prefix + arrow keys (repeatable)
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5
bind -r Up resize-pane -U 5
bind -r Down resize-pane -D 5


# Removed duplicate - using the one below

# Toggle persistent terminal split with 75/25 ratio
%hidden OPENCODE_TOGGLE='if [ $(tmux list-panes | wc -l) -eq 1 ]; then \
    if ! tmux list-windows | grep -q "opencode-term"; then \
        tmux new-window -d -n "opencode-term" -c "#{pane_current_path}" "opencode"; \
    fi; \
    tmux join-pane -h -s "opencode-term" -l 25%; \
else \
    tmux break-pane -d -n "opencode-term"; \
fi'

bind-key ` run-shell "$OPENCODE_TOGGLE"
bind-key -n C-\` run-shell "$OPENCODE_TOGGLE"

# Basic settings
set-option -sg escape-time 10
set-option -g focus-events on
set-option -g default-terminal "tmux-256color"
set-option -g mouse on
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on
set-option -g status-position top
set-option -g status-left-length 20
set-option -g status-left '#[fg=green]#S #[default]'
set-option -g status-right '#[fg=yellow]%Y-%m-%d %H:%M'
set-option -g allow-passthrough on

# Terminal overrides with undercurl support
set-option -sa terminal-overrides ',*:RGB'
set-option -sa terminal-overrides ',*:Tc' 
set-option -sa terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[ q'
set-option -sa terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set-option -sa terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Vim-style copy mode with clipboard integration
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "win32yank.exe -i --crlf"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "win32yank.exe -i --crlf"
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Mouse drag to copy to clipboard
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "win32yank.exe -i --crlf"

# Paste from Windows clipboard
bind-key p run "tmux set-buffer -- \"$(win32yank.exe -o --lf)\"; tmux paste-buffer"

# Smart pane switching with vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Prevent accidental detach
bind d confirm-before -p "Detach session? (y/n)" detach-client

# Reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'egel/tmux-gruvbox'
set -g @tmux-gruvbox 'dark'

run '~/.tmux/plugins/tpm/tpm'
